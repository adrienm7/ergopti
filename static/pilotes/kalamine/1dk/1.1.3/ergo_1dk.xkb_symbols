// Generated by kalamine on 2024-11-27
//
// This XKB symbols file should be copied to:
//     /usr/share/X11/xkb/symbols/custom
// or
//     $XKB_CONFIG_ROOT/symbols/custom
//
// File          : ergo_1dk.xkb_symbols
// Project page  : https://ergopti.fr
// Author        : Adrien MOYAUX
// Version       : 1.1.3
// License       : WTFPL - Do What The Fuck You Want Public License
//
// Disposition Ergopti, pour une saisie plus rapide de texte.
//
// Base layer + dead key
// ╭╌╌╌╌╌┰─────┬─────┬─────┬─────┬─────┰─────┬─────┬─────┬─────┬─────┰╌╌╌╌╌┬╌╌╌╌╌╮
// ┆ +   ┃ 1   │ 2   │ 3   │ 4   │ 5   ┃ 6   │ 7   │ 8   │ 9   │ º   ┃ €   ┆ %   ┆
// ┆ =   ┃ 1   │ 2   │ 3   │ 4   │ 5   ┃ 6   │ 7   │ 8   │ 9   │ 0 ° ┃ €   ┆ %   ┆
// ╰╌╌╌╌╌╂─────┼─────┼─────┼─────┼─────╂─────┼─────┼─────┼─────┼─────╂╌╌╌╌╌┼╌╌╌╌╌┤
//       ┃ Z   │ Y   │ O   │ W   │ B   ┃ F   │ D   │ L   │ P   │ ?   ┃ {   ┆ }   ┆
//       ┃   á │   í │     │     │     ┃     │     │   û │   q │ ’ ? ┃ [   ┆ ]   ┆
//       ┠─────┼─────┼─────┼─────┼─────╂─────┼─────┼─────┼─────┼─────╂╌╌╌╌╌┼╌╌╌╌╌┤
//       ┃ A   │ I   │ E   │ U   │ K   ┃ V   │ S   │ N   │ T   │ R   ┃ "   ┆ |   ┆
//       ┃   è │   é │   œ │     │     ┃     │     │   ô │     │     ┃ '   ┆ \   ┆
// ╭╌╌╌╌╌╂─────┼─────┼─────┼─────┼─────╂─────┼─────┼─────┼─────┼─────╂╌╌╌╌╌┴╌╌╌╌╌╯
// ┆ Ê   ┃ :   │ J   │ À   │*¨   │ ;   ┃ M   │ C   │ H   │ G   │ X   ┃
// ┆   ^ ┃ . ù │   æ │   ê │***¨ │ ,   ┃   ñ │   ç │   î │     │   â ┃
// ╰╌╌╌╌╌┸─────┴─────┴─────┴─────┴─────┸─────┴─────┴─────┴─────┴─────┚
//
// AltGr layer
// ╭╌╌╌╌╌┰─────┬─────┬─────┬─────┬─────┰─────┬─────┬─────┬─────┬─────┰╌╌╌╌╌┬╌╌╌╌╌╮
// ┆     ┃   ¹ │   ² │   ³ │   ⁴ │   ⁵ ┃   ⁶ │   ⁷ │   ⁸ │   ⁹ │   ⁰ ┃     ┆     ┆
// ┆     ┃   ₁ │   ₂ │   ₃ │   ₄ │   ₅ ┃   ₆ │   ₇ │   ₈ │   ₉ │   ₀ ┃     ┆     ┆
// ╰╌╌╌╌╌╂─────┼─────┼─────┼─────┼─────╂─────┼─────┼─────┼─────┼─────╂╌╌╌╌╌┼╌╌╌╌╌┤
//       ┃   „ │   „ │     │     │   “ ┃   ” │   § │   ≠ │   ± │   ¿ ┃     ┆     ┆
//       ┃   ` │   @ │   % │   ! │   « ┃   » │   $ │   = │   + │   ' ┃     ┆     ┆
//       ┠─────┼─────┼─────┼─────┼─────╂─────┼─────┼─────┼─────┼─────╂╌╌╌╌╌┼╌╌╌╌╌┤
//       ┃     │     │     │     │     ┃     │   — │   – │     │     ┃     ┆     ┆
//       ┃   < │   > │   { │   } │   \ ┃   | │   ( │   ) │   [ │   ] ┃     ┆     ┆
// ╭╌╌╌╌╌╂─────┼─────┼─────┼─────┼─────╂─────┼─────┼─────┼─────┼─────╂╌╌╌╌╌┴╌╌╌╌╌╯
// ┆     ┃   … │     │     │     │   · ┃   − │   € │   £ │   ≈ │   × ┃
// ┆     ┃   : │   / │   = │   " │   ; ┃   & │   ^ │   # │   ~ │   * ┃
// ╰╌╌╌╌╌┸─────┴─────┴─────┴─────┴─────┸─────┴─────┴─────┴─────┴─────┚

partial alphanumeric_keys modifier_keys
xkb_symbols "1DK" {
    name[group1]= "Disposition Ergopti, pour une saisie plus rapide de texte.";
    key.type[group1] = "EIGHT_LEVEL";

    // Digits
    key <AE01> {[ 1               , 1               , U2081           , onesuperior     , VoidSymbol      , VoidSymbol      ]}; // 1 1 ₁ ¹
    key <AE02> {[ 2               , 2               , U2082           , twosuperior     , VoidSymbol      , VoidSymbol      ]}; // 2 2 ₂ ²
    key <AE03> {[ 3               , 3               , U2083           , threesuperior   , VoidSymbol      , VoidSymbol      ]}; // 3 3 ₃ ³
    key <AE04> {[ 4               , 4               , U2084           , U2074           , VoidSymbol      , VoidSymbol      ]}; // 4 4 ₄ ⁴
    key <AE05> {[ 5               , 5               , U2085           , U2075           , VoidSymbol      , VoidSymbol      ]}; // 5 5 ₅ ⁵
    key <AE06> {[ 6               , 6               , U2086           , U2076           , VoidSymbol      , VoidSymbol      ]}; // 6 6 ₆ ⁶
    key <AE07> {[ 7               , 7               , U2087           , U2077           , VoidSymbol      , VoidSymbol      ]}; // 7 7 ₇ ⁷
    key <AE08> {[ 8               , 8               , U2088           , U2078           , VoidSymbol      , VoidSymbol      ]}; // 8 8 ₈ ⁸
    key <AE09> {[ 9               , 9               , U2089           , U2079           , VoidSymbol      , VoidSymbol      ]}; // 9 9 ₉ ⁹
    key <AE10> {[ 0               , masculine       , U2080           , U2070           , degree          , VoidSymbol      ]}; // 0 º ₀ ⁰ °

    // Letters, first row
    key <AD01> {[ z               , Z               , grave           , U201E           , aacute          , Aacute          ]}; // z Z ` „ á Á
    key <AD02> {[ y               , Y               , at              , U201E           , iacute          , Iacute          ]}; // y Y @ „ í Í
    key <AD03> {[ o               , O               , percent         , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; // o O %
    key <AD04> {[ w               , W               , exclam          , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; // w W !
    key <AD05> {[ b               , B               , guillemotleft   , U201C           , VoidSymbol      , VoidSymbol      ]}; // b B « “
    key <AD06> {[ f               , F               , guillemotright  , U201D           , VoidSymbol      , VoidSymbol      ]}; // f F » ”
    key <AD07> {[ d               , D               , dollar          , section         , VoidSymbol      , VoidSymbol      ]}; // d D $ §
    key <AD08> {[ l               , L               , equal           , notequal        , ucircumflex     , Ucircumflex     ]}; // l L = ≠ û Û
    key <AD09> {[ p               , P               , plus            , plusminus       , q               , Q               ]}; // p P + ± q Q
    key <AD10> {[ U2019           , question        , apostrophe      , questiondown    , question        , VoidSymbol      ]}; // ’ ? ' ¿ ?

    // Letters, second row
    key <AC01> {[ a               , A               , less            , lessthanequal   , egrave          , Egrave          ]}; // a A < ≤ è È
    key <AC02> {[ i               , I               , greater         , greaterthanequal, eacute          , Eacute          ]}; // i I > ≥ é É
    key <AC03> {[ e               , E               , braceleft       , VoidSymbol      , oe              , OE              ]}; // e E {   œ Œ
    key <AC04> {[ u               , U               , braceright      , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; // u U }
    key <AC05> {[ k               , K               , backslash       , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; // k K \ 
    key <AC06> {[ v               , V               , bar             , brokenbar       , VoidSymbol      , VoidSymbol      ]}; // v V | ¦
    key <AC07> {[ s               , S               , parenleft       , emdash          , VoidSymbol      , VoidSymbol      ]}; // s S ( —
    key <AC08> {[ n               , N               , parenright      , endash          , ocircumflex     , Ocircumflex     ]}; // n N ) – ô Ô
    key <AC09> {[ t               , T               , bracketleft     , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; // t T [
    key <AC10> {[ r               , R               , bracketright    , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; // r R ]

    // Letters, third row
    key <AB01> {[ period          , colon           , colon           , ellipsis        , ugrave          , Ugrave          ]}; // . : : … ù Ù
    key <AB02> {[ j               , J               , slash           , VoidSymbol      , ae              , AE              ]}; // j J /   æ Æ
    key <AB03> {[ agrave          , Agrave          , equal           , VoidSymbol      , ecircumflex     , Ecircumflex     ]}; // à À =   ê Ê
    key <AB04> {[ ISO_Level5_Latch, dead_diaeresis  , quotedbl        , VoidSymbol      , dead_diaeresis  , VoidSymbol      ]}; // *¨ ¨ "   ¨
    key <AB05> {[ comma           , semicolon       , semicolon       , periodcentered  , VoidSymbol      , VoidSymbol      ]}; // , ; ; ·
    key <AB06> {[ m               , M               , ampersand       , U2212           , ntilde          , Ntilde          ]}; // m M & − ñ Ñ
    key <AB07> {[ c               , C               , asciicircum     , EuroSign        , ccedilla        , Ccedilla        ]}; // c C ^ € ç Ç
    key <AB08> {[ h               , H               , numbersign      , sterling        , icircumflex     , Icircumflex     ]}; // h H # £ î Î
    key <AB09> {[ g               , G               , asciitilde      , U2248           , VoidSymbol      , VoidSymbol      ]}; // g G ~ ≈
    key <AB10> {[ x               , X               , asterisk        , multiply        , acircumflex     , Acircumflex     ]}; // x X * × â Â

    // Pinky keys
    key <AE11> {[ EuroSign        , EuroSign        , VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; // € €
    key <AE12> {[ percent         , percent         , VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; // % %
    key <AE13> {[ VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; //
    key <AD11> {[ bracketleft     , braceleft       , VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; // [ {
    key <AD12> {[ bracketright    , braceright      , VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; // ] }
    key <AC11> {[ apostrophe      , quotedbl        , VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; // ' "
    key <AB11> {[ VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; //
    key <TLDE> {[ equal           , plus            , VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; // = +
    key <BKSL> {[ backslash       , bar             , VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; // \ |
    key <LSGT> {[ ecircumflex     , Ecircumflex     , VoidSymbol      , VoidSymbol      , asciicircum     , VoidSymbol      ]}; // ê Ê     ^

    // Space bar
    key <SPCE> {[ space           , minus           , underscore      , nobreakspace    , nobreakspace    , nobreakspace    ]}; //   - _

    // The AltGr key is an ISO_Level3_Shift:
    include "level3(ralt_switch)"

    // The “OneDeadKey” is an ISO_Level5_Latch, which is activated by this:
    // (note: MDSW [Mode_switch] is an alias for LVL5 on recent versions of XKB)
    replace key <MDSW> {
        type[Group1] = "ONE_LEVEL",
        symbols[Group1] = [ ISO_Level5_Shift ]
    };
    modifier_map Mod3 { <MDSW> };
};
// vim: ft=xkb:fdm=indent:ts=4:nowrap

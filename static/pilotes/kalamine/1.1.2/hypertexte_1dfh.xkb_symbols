// Generated by kalamine on 2024-11-09
//
// This XKB symbols file should be copied to:
//     /usr/share/X11/xkb/symbols/custom
// or
//     $XKB_CONFIG_ROOT/symbols/custom
//
// File          : hypertexte_1dfh.xkb_symbols
// Project page  : https://hypertexte.beseven.fr
// Author        : Adrien MOYAUX
// Version       : 1.1.2
// License       : WTFPL - Do What The Fuck You Want Public License
//
// Disposition HyperTexte, pour une saisie plus rapide de texte.
//
// Base layer + dead key
// ┌─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┲━━━━━━━━━━┓
// │     │     │     │     │     │     │     │     │     │     │     │     │     ┃          ┃
// │     │     │     │     │     │     │     │     │     │     │     │     │     ┃ ⌫        ┃
// ┢━━━━━┷━━┱──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┺━━┳━━━━━━━┫
// ┃        ┃ Z   │ Y   │ O   │ W   │ B   │ F   │ D   │ L   │ P   │ ?   │     │     ┃       ┃
// ┃ ↹      ┃   á │   í │     │     │     │     │     │   û │   q │ ’   │     │     ┃       ┃
// ┣━━━━━━━━┻┱────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┺┓  ⏎   ┃
// ┃         ┃ A   │ I   │ E   │ U   │ K   │ V   │ S   │ N   │ T   │ R   │     │     ┃      ┃
// ┃ ⇬       ┃   è │   é │   œ │     │     │     │     │   ô │     │     │     │     ┃      ┃
// ┣━━━━━━┳━━┹──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┲━━┷━━━━━┻━━━━━━┫
// ┃      ┃     │ :   │ J   │ À   │*¨   │ ;   │ M   │ C   │ H   │ G   │ X   ┃               ┃
// ┃ ⇧    ┃     │ . ù │   æ │   ê │***¨ │ ,   │   ñ │   ç │   î │     │   â ┃ ⇧             ┃
// ┣━━━━━━┻┳━━━━┷━━┳━━┷━━━━┱┴─────┴─────┴─────┴─────┴─────┴─┲━━━┷━━━┳━┷━━━━━╋━━━━━━━┳━━━━━━━┫
// ┃       ┃       ┃       ┃                                ┃       ┃       ┃       ┃       ┃
// ┃ Ctrl  ┃ super ┃ Alt   ┃ ␣                              ┃ AltGr ┃ super ┃ menu  ┃ Ctrl  ┃
// ┗━━━━━━━┻━━━━━━━┻━━━━━━━┹────────────────────────────────┺━━━━━━━┻━━━━━━━┻━━━━━━━┻━━━━━━━┛
//
// AltGr layer
// ┌─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┲━━━━━━━━━━┓
// │     │     │     │     │     │     │     │     │     │     │     │     │     ┃          ┃
// │     │     │     │     │     │     │     │     │     │     │     │     │     ┃ ⌫        ┃
// ┢━━━━━┷━━┱──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┺━━┳━━━━━━━┫
// ┃        ┃   „ │   „ │     │     │   “ │   ” │   § │   ≠ │   ± │     │     │     ┃       ┃
// ┃ ↹      ┃   ` │   @ │   % │   ! │   « │   » │   $ │   = │   + │   ' │     │     ┃       ┃
// ┣━━━━━━━━┻┱────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┺┓  ⏎   ┃
// ┃         ┃   ⩽ │   ⩾ │     │     │     │     │     │     │     │     │     │     ┃      ┃
// ┃ ⇬       ┃   < │   > │   { │   } │   \ │   | │   ( │   ) │   [ │   ] │     │     ┃      ┃
// ┣━━━━━━┳━━┹──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┲━━┷━━━━━┻━━━━━━┫
// ┃      ┃     │   … │     │     │     │   · │     │     │     │     │   × ┃               ┃
// ┃ ⇧    ┃     │   : │   / │   = │   " │   ; │   & │   ^ │   # │   ~ │   * ┃ ⇧             ┃
// ┣━━━━━━┻┳━━━━┷━━┳━━┷━━━━┱┴─────┴─────┴─────┴─────┴─────┴─┲━━━┷━━━┳━┷━━━━━╋━━━━━━━┳━━━━━━━┫
// ┃       ┃       ┃       ┃                                ┃       ┃       ┃       ┃       ┃
// ┃ Ctrl  ┃ super ┃ Alt   ┃ ␣                              ┃ AltGr ┃ super ┃ menu  ┃ Ctrl  ┃
// ┗━━━━━━━┻━━━━━━━┻━━━━━━━┹────────────────────────────────┺━━━━━━━┻━━━━━━━┻━━━━━━━┻━━━━━━━┛

partial alphanumeric_keys modifier_keys
xkb_symbols "Standard" {
    name[group1]= "Disposition HyperTexte, pour une saisie plus rapide de texte.";
    key.type[group1] = "EIGHT_LEVEL";

    // Digits
    key <AE01> {[ 1               , VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; // 1
    key <AE02> {[ 2               , VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; // 2
    key <AE03> {[ 3               , VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; // 3
    key <AE04> {[ 4               , VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; // 4
    key <AE05> {[ 5               , VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; // 5
    key <AE06> {[ 6               , VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; // 6
    key <AE07> {[ 7               , VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; // 7
    key <AE08> {[ 8               , VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; // 8
    key <AE09> {[ 9               , VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; // 9
    key <AE10> {[ 0               , VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; // 0

    // Letters, first row
    key <AD01> {[ z               , Z               , grave           , U201E           , aacute          , Aacute          ]}; // z Z ` „ á Á
    key <AD02> {[ y               , Y               , at              , U201E           , iacute          , Iacute          ]}; // y Y @ „ í Í
    key <AD03> {[ o               , O               , percent         , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; // o O %
    key <AD04> {[ w               , W               , exclam          , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; // w W !
    key <AD05> {[ b               , B               , guillemotleft   , U201C           , VoidSymbol      , VoidSymbol      ]}; // b B « “
    key <AD06> {[ f               , F               , guillemotright  , U201D           , VoidSymbol      , VoidSymbol      ]}; // f F » ”
    key <AD07> {[ d               , D               , dollar          , section         , VoidSymbol      , VoidSymbol      ]}; // d D $ §
    key <AD08> {[ l               , L               , equal           , notequal        , ucircumflex     , Ucircumflex     ]}; // l L = ≠ û Û
    key <AD09> {[ p               , P               , plus            , plusminus       , q               , Q               ]}; // p P + ± q Q
    key <AD10> {[ U2019           , question        , apostrophe      , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; // ’ ? '

    // Letters, second row
    key <AC01> {[ a               , A               , less            , U2A7D           , egrave          , Egrave          ]}; // a A < ⩽ è È
    key <AC02> {[ i               , I               , greater         , U2A7E           , eacute          , Eacute          ]}; // i I > ⩾ é É
    key <AC03> {[ e               , E               , braceleft       , VoidSymbol      , oe              , OE              ]}; // e E {   œ Œ
    key <AC04> {[ u               , U               , braceright      , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; // u U }
    key <AC05> {[ k               , K               , backslash       , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; // k K \ 
    key <AC06> {[ v               , V               , bar             , brokenbar       , VoidSymbol      , VoidSymbol      ]}; // v V | ¦
    key <AC07> {[ s               , S               , parenleft       , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; // s S (
    key <AC08> {[ n               , N               , parenright      , VoidSymbol      , ocircumflex     , Ocircumflex     ]}; // n N )   ô Ô
    key <AC09> {[ t               , T               , bracketleft     , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; // t T [
    key <AC10> {[ r               , R               , bracketright    , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; // r R ]

    // Letters, third row
    key <AB01> {[ period          , colon           , colon           , ellipsis        , ugrave          , Ugrave          ]}; // . : : … ù Ù
    key <AB02> {[ j               , J               , slash           , VoidSymbol      , ae              , AE              ]}; // j J /   æ Æ
    key <AB03> {[ agrave          , Agrave          , equal           , VoidSymbol      , ecircumflex     , Ecircumflex     ]}; // à À =   ê Ê
    key <AB04> {[ ISO_Level5_Latch, dead_diaeresis  , quotedbl        , VoidSymbol      , dead_diaeresis  , VoidSymbol      ]}; // *¨ ¨ "   ¨
    key <AB05> {[ comma           , semicolon       , semicolon       , periodcentered  , VoidSymbol      , VoidSymbol      ]}; // , ; ; ·
    key <AB06> {[ m               , M               , ampersand       , VoidSymbol      , ntilde          , Ntilde          ]}; // m M &   ñ Ñ
    key <AB07> {[ c               , C               , asciicircum     , VoidSymbol      , ccedilla        , Ccedilla        ]}; // c C ^   ç Ç
    key <AB08> {[ h               , H               , numbersign      , VoidSymbol      , icircumflex     , Icircumflex     ]}; // h H #   î Î
    key <AB09> {[ g               , G               , asciitilde      , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; // g G ~
    key <AB10> {[ x               , X               , asterisk        , multiply        , acircumflex     , Acircumflex     ]}; // x X * × â Â

    // Pinky keys
    key <AE11> {[ EuroSign        , VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; // €
    key <AE12> {[ VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; //
    key <AE13> {[ VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; //
    key <AD11> {[ VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; //
    key <AD12> {[ VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; //
    key <AC11> {[ VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; //
    key <AB11> {[ VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; //
    key <TLDE> {[ VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; //
    key <BKSL> {[ VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; //
    key <LSGT> {[ VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; //

    // Space bar
    key <SPCE> {[ space           , minus           , underscore      , space           , nobreakspace    , nobreakspace    ]}; //   - _

    // The AltGr key is an ISO_Level3_Shift:
    include "level3(ralt_switch)"

    // The “OneDeadKey” is an ISO_Level5_Latch, which is activated by this:
    // (note: MDSW [Mode_switch] is an alias for LVL5 on recent versions of XKB)
    replace key <MDSW> {
        type[Group1] = "ONE_LEVEL",
        symbols[Group1] = [ ISO_Level5_Shift ]
    };
    modifier_map Mod3 { <MDSW> };
};
// vim: ft=xkb:fdm=indent:ts=4:nowrap

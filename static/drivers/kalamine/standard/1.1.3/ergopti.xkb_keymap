// Generated by kalamine on 2024-12-17
//
// This is a standalone XKB keymap file. To apply this keymap, use:
//   xkbcomp -w9 ergopti.xkb_keymap $DISPLAY
//
// DO NOT COPY THIS INTO xkb/symbols: THIS WOULD MESS UP YOUR XKB CONFIG.
//
// File          : ergopti.xkb_keymap
// Project page  : https://ergopti.fr
// Author        : Adrien MOYAUX
// Version       : 1.1.3
// License       : WTFPL - Do What The Fuck You Want Public License
//
// Disposition ergonomique optimisée pour le français, l’anglais et le code
//

xkb_keymap {
  xkb_keycodes      { include "evdev"    };
  xkb_types         { include "complete" };
  xkb_compatibility { include "complete" };

  // ┌─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┲━━━━━━━━━━┓
  // │     │     │     │     │     │     │     │     │     │     │     │     │     ┃          ┃
  // │     │     │     │     │     │     │     │     │     │     │     │     │     ┃ ⌫        ┃
  // ┢━━━━━┷━━┱──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┺━━┳━━━━━━━┫
  // ┃        ┃ È æ │ Y í │ O   │ W   │ B   │ F   │ D   │ L   │ P   │ ?   │ Z   │     ┃       ┃
  // ┃ ↹      ┃   ` │   @ │   œ │   ù │   « │   » │   $ │   = │   + │ ' ? │   ! │     ┃       ┃
  // ┣━━━━━━━━┻┱────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┺┓  ⏎   ┃
  // ┃         ┃ A   │ I   │ E   │ U   │ : · │ V   │ S   │ N ñ │ T   │ R   │ Q   │     ┃      ┃
  // ┃ ⇬       ┃   < │   > │   { │   } │ . : │   | │   ( │   ) │   [ │   ] │   % │     ┃      ┃
  // ┣━━━━━━┳━━┹──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┲━━┷━━━━━┻━━━━━━┫
  // ┃      ┃ Ê   │ É   │ À á │ J   │ ; ’ │ K   │ M   │ C   │ H   │ G   │ X   ┃               ┃
  // ┃ ⇧    ┃   ^ │   / │   \ │   " │ , ; │   … │   & │   ç │   # │   ~ │   * ┃ ⇧             ┃
  // ┣━━━━━━┻┳━━━━┷━━┳━━┷━━━━┱┴─────┴─────┴─────┴─────┴─────┴─┲━━━┷━━━┳━┷━━━━━╋━━━━━━━┳━━━━━━━┫
  // ┃       ┃       ┃       ┃                                ┃       ┃       ┃       ┃       ┃
  // ┃ Ctrl  ┃ super ┃ Alt   ┃ ␣                              ┃ AltGr ┃ super ┃ menu  ┃ Ctrl  ┃
  // ┗━━━━━━━┻━━━━━━━┻━━━━━━━┹────────────────────────────────┺━━━━━━━┻━━━━━━━┻━━━━━━━┻━━━━━━━┛

  partial alphanumeric_keys modifier_keys
  xkb_symbols "Standard" {
    include "pc"
    include "inet(evdev)"
    include "level3(ralt_switch)"

    name[group1]= "Disposition ergonomique optimisée pour le français, l’anglais et le code";
    key.type[group1] = "FOUR_LEVEL";

    // Digits
    key <AE01> {[ 1               , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; // 1
    key <AE02> {[ 2               , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; // 2
    key <AE03> {[ 3               , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; // 3
    key <AE04> {[ 4               , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; // 4
    key <AE05> {[ 5               , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; // 5
    key <AE06> {[ 6               , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; // 6
    key <AE07> {[ 7               , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; // 7
    key <AE08> {[ 8               , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; // 8
    key <AE09> {[ 9               , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; // 9
    key <AE10> {[ 0               , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; // 0

    // Letters, first row
    key <AD01> {[ egrave          , Egrave          , grave           , ae              ]}; // è È ` æ
    key <AD02> {[ y               , Y               , at              , iacute          ]}; // y Y @ í
    key <AD03> {[ o               , O               , oe              , OE              ]}; // o O œ Œ
    key <AD04> {[ w               , W               , ugrave          , Ugrave          ]}; // w W ù Ù
    key <AD05> {[ b               , B               , guillemotleft   , VoidSymbol      ]}; // b B «
    key <AD06> {[ f               , F               , guillemotright  , VoidSymbol      ]}; // f F »
    key <AD07> {[ d               , D               , dollar          , VoidSymbol      ]}; // d D $
    key <AD08> {[ l               , L               , equal           , VoidSymbol      ]}; // l L =
    key <AD09> {[ p               , P               , plus            , VoidSymbol      ]}; // p P +
    key <AD10> {[ apostrophe      , question        , question        , VoidSymbol      ]}; // ' ? ?

    // Letters, second row
    key <AC01> {[ a               , A               , less            , lessthanequal   ]}; // a A < ≤
    key <AC02> {[ i               , I               , greater         , greaterthanequal]}; // i I > ≥
    key <AC03> {[ e               , E               , braceleft       , VoidSymbol      ]}; // e E {
    key <AC04> {[ u               , U               , braceright      , VoidSymbol      ]}; // u U }
    key <AC05> {[ period          , colon           , colon           , periodcentered  ]}; // . : : ·
    key <AC06> {[ v               , V               , bar             , brokenbar       ]}; // v V | ¦
    key <AC07> {[ s               , S               , parenleft       , VoidSymbol      ]}; // s S (
    key <AC08> {[ n               , N               , parenright      , ntilde          ]}; // n N ) ñ
    key <AC09> {[ t               , T               , bracketleft     , VoidSymbol      ]}; // t T [
    key <AC10> {[ r               , R               , bracketright    , VoidSymbol      ]}; // r R ]

    // Letters, third row
    key <AB01> {[ eacute          , Eacute          , slash           , VoidSymbol      ]}; // é É /
    key <AB02> {[ agrave          , Agrave          , backslash       , aacute          ]}; // à À \ á
    key <AB03> {[ j               , J               , quotedbl        , VoidSymbol      ]}; // j J "
    key <AB04> {[ comma           , semicolon       , semicolon       , U2019           ]}; // , ; ; ’
    key <AB05> {[ k               , K               , ellipsis        , VoidSymbol      ]}; // k K …
    key <AB06> {[ m               , M               , ampersand       , VoidSymbol      ]}; // m M &
    key <AB07> {[ c               , C               , ccedilla        , Ccedilla        ]}; // c C ç Ç
    key <AB08> {[ h               , H               , numbersign      , VoidSymbol      ]}; // h H #
    key <AB09> {[ g               , G               , asciitilde      , VoidSymbol      ]}; // g G ~
    key <AB10> {[ x               , X               , asterisk        , VoidSymbol      ]}; // x X *

    // Pinky keys
    key <AE11> {[ EuroSign        , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; // €
    key <AE12> {[ VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; //
    key <AE13> {[ VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; //
    key <AD11> {[ z               , Z               , exclam          , VoidSymbol      ]}; // z Z !
    key <AD12> {[ dead_diaeresis  , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; // ¨
    key <AC11> {[ q               , Q               , percent         , VoidSymbol      ]}; // q Q %
    key <AB11> {[ VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; //
    key <TLDE> {[ VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; //
    key <BKSL> {[ dead_circumflex , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; // ^
    key <LSGT> {[ ecircumflex     , Ecircumflex     , asciicircum     , VoidSymbol      ]}; // ê Ê ^

    // Space bar
    key <SPCE> {[ space           , minus           , underscore      , space           ]}; //   - _
  };
};
// vim: ft=xkb:fdm=indent:ts=2:nowrap

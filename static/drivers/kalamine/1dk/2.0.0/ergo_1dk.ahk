; Generated by kalamine on 2024-12-17

#NoEnv
#Persistent
#InstallKeybdHook
#SingleInstance,       force
#MaxThreadsBuffer
#MaxThreadsPerHotKey   3
#MaxHotkeysPerInterval 300
#MaxThreads            20

SendMode Event ; either Event or Input
SetKeyDelay,   -1
SetBatchLines, -1
Process, Priority, , R
SetWorkingDir, %A_ScriptDir%
StringCaseSense, On


;-------------------------------------------------------------------------------
; On/Off Switch
;-------------------------------------------------------------------------------

global Active := True

HideTrayTip() {
  TrayTip  ; Attempt to hide it the normal way.
  if SubStr(A_OSVersion,1,3) = "10." {
    Menu Tray, NoIcon
    Sleep 200  ; It may be necessary to adjust this sleep.
    Menu Tray, Icon
  }
}

ShowTrayTip() {
  title := "Ergopti"
  text := Active ? "ON" : "OFF"
  HideTrayTip()
  TrayTip, %title% , %text%, 1, 0x31
  SetTimer, HideTrayTip, -1500
}

RAlt & Alt::
Alt & RAlt::
  global Active
  Active := !Active
  ShowTrayTip()
  return

#If Active
SetTimer, ShowTrayTip, -1000  ; not working


;-------------------------------------------------------------------------------
; DeadKey Helpers
;-------------------------------------------------------------------------------

global DeadKey := ""

; Check CapsLock status, upper the char if needed and send the char
SendChar(char) {
  if % GetKeyState("CapsLock", "T") {
    if (StrLen(char) == 6) {
      ; we have something in the form of `U+NNNN `
      ; Change it to 0xNNNN so it can be passed to `Chr` function
      char := Chr("0x" SubStr(char, 3, 4))
    }
    StringUpper, char, char
  }
  Send, {%char%}
}

DoTerm(base:="") {
  global DeadKey

  term := SubStr(DeadKey, 2, 1)

  Send, {%term%}
  SendChar(base)
  DeadKey := ""
}

DoAction(action:="") {
  global DeadKey

  if (action == "U+0020") {
    Send, {SC39}
    DeadKey := ""
  }
  else if (StrLen(action) != 2) {
    SendChar(action)
    DeadKey := ""
  }
  else if (action == DeadKey) {
    DoTerm(SubStr(DeadKey, 2, 1))
  }
  else {
    DeadKey := action
  }
}

SendKey(base, deadkeymap) {
  if (!DeadKey) {
    DoAction(base)
  }
  else if (deadkeymap.HasKey(DeadKey)) {
    DoAction(deadkeymap[DeadKey])
  }
  else {
    DoTerm(base)
  }
}


;-------------------------------------------------------------------------------
; Base
;-------------------------------------------------------------------------------

;  Digits

 SC02::SendKey("U+0031", {}) ; 1
+SC02::SendKey("U+0031", {}) ; 1

 SC03::SendKey("U+0032", {}) ; 2
+SC03::SendKey("U+0032", {}) ; 2

 SC04::SendKey("U+0033", {}) ; 3
+SC04::SendKey("U+0033", {}) ; 3

 SC05::SendKey("U+0034", {}) ; 4
+SC05::SendKey("U+0034", {}) ; 4

 SC06::SendKey("U+0035", {}) ; 5
+SC06::SendKey("U+0035", {}) ; 5

 SC07::SendKey("U+0036", {}) ; 6
+SC07::SendKey("U+0036", {}) ; 6

 SC08::SendKey("U+0037", {}) ; 7
+SC08::SendKey("U+0037", {}) ; 7

 SC09::SendKey("U+0038", {}) ; 8
+SC09::SendKey("U+0038", {}) ; 8

 SC0a::SendKey("U+0039", {}) ; 9
+SC0a::SendKey("U+0039", {}) ; 9

 SC0b::SendKey("U+0030", {"**": "U+00b0"}) ; 0
+SC0b::SendKey("U+00ba", {}) ; º

;  Letters, first row

 SC10::SendKey("U+007a", {"**": "U+00e1"}) ; z
+SC10::SendKey("U+005a", {"**": "U+00c1"}) ; Z

 SC11::SendKey("U+0079", {"**": "U+00ed", "*¨": "U+00ff"}) ; y
+SC11::SendKey("U+0059", {"**": "U+00cd", "*¨": "U+0178"}) ; Y

 SC12::SendKey("U+006f", {"*¨": "U+00f6"}) ; o
+SC12::SendKey("U+004f", {"*¨": "U+00d6"}) ; O

 SC13::SendKey("U+0077", {"*¨": "U+1e85"}) ; w
+SC13::SendKey("U+0057", {"*¨": "U+1e84"}) ; W

 SC14::SendKey("U+0062", {}) ; b
+SC14::SendKey("U+0042", {}) ; B

 SC15::SendKey("U+0066", {}) ; f
+SC15::SendKey("U+0046", {}) ; F

 SC16::SendKey("U+0063", {"**": "U+00e7"}) ; c
+SC16::SendKey("U+0043", {"**": "U+00c7"}) ; C

 SC17::SendKey("U+0068", {"**": "U+00fb", "*¨": "U+1e27"}) ; h
+SC17::SendKey("U+0048", {"**": "U+00db", "*¨": "U+1e26"}) ; H

 SC18::SendKey("U+0067", {}) ; g
+SC18::SendKey("U+0047", {}) ; G

 SC19::SendKey("U+0078", {"**": "U+00e2", "*¨": "U+1e8d"}) ; x
+SC19::SendKey("U+0058", {"**": "U+00c2", "*¨": "U+1e8c"}) ; X

;  Letters, second row

 SC1e::SendKey("U+0061", {"**": "U+00e8", "*¨": "U+00e4"}) ; a
+SC1e::SendKey("U+0041", {"**": "U+00c8", "*¨": "U+00c4"}) ; A

 SC1f::SendKey("U+0069", {"**": "U+00e9", "*¨": "U+00ef"}) ; i
+SC1f::SendKey("U+0049", {"**": "U+00c9", "*¨": "U+00cf"}) ; I

 SC20::SendKey("U+0065", {"**": "U+0153", "*¨": "U+00eb"}) ; e
+SC20::SendKey("U+0045", {"**": "U+0152", "*¨": "U+00cb"}) ; E

 SC21::SendKey("U+0075", {"*¨": "U+00fc"}) ; u
+SC21::SendKey("U+0055", {"*¨": "U+00dc"}) ; U

 SC22::SendKey("U+006b", {}) ; k
+SC22::SendKey("U+004b", {}) ; K

 SC23::SendKey("U+0076", {}) ; v
+SC23::SendKey("U+0056", {}) ; V

 SC24::SendKey("U+0073", {}) ; s
+SC24::SendKey("U+0053", {}) ; S

 SC25::SendKey("U+006e", {"**": "U+00f4"}) ; n
+SC25::SendKey("U+004e", {"**": "U+00d4"}) ; N

 SC26::SendKey("U+0074", {"*¨": "U+1e97"}) ; t
+SC26::SendKey("U+0054", {}) ; T

 SC27::SendKey("U+0072", {}) ; r
+SC27::SendKey("U+0052", {}) ; R

;  Letters, third row

 SC2c::SendKey("U+002e", {"**": "U+00f9"}) ; .
+SC2c::SendKey("U+003a", {"**": "U+00d9"}) ; :

 SC2d::SendKey("U+006a", {"**": "U+00e6"}) ; j
+SC2d::SendKey("U+004a", {"**": "U+00c6"}) ; J

 SC2e::SendKey("U+00e0", {"**": "U+00ea"}) ; à
+SC2e::SendKey("U+00c0", {"**": "U+00ca"}) ; À

 SC2f::SendKey("**", {"**": "*¨"})
+SC2f::SendKey("*¨", {"*¨": "¨"})

 SC30::SendKey("U+002c", {}) ; ,
+SC30::SendKey("U+003b", {}) ; ;

 SC31::SendKey("U+006d", {"**": "U+00f1"}) ; m
+SC31::SendKey("U+004d", {"**": "U+00d1"}) ; M

 SC32::SendKey("U+0064", {}) ; d
+SC32::SendKey("U+0044", {}) ; D

 SC33::SendKey("U+006c", {"**": "U+00ee"}) ; l
+SC33::SendKey("U+004c", {"**": "U+00ce"}) ; L

 SC34::SendKey("U+0070", {"**": "U+0071"}) ; p
+SC34::SendKey("U+0050", {"**": "U+0051"}) ; P

 SC35::SendKey("U+2019", {"**": "U+003f"}) ; ’
+SC35::SendKey("U+003f", {}) ; ?

;  Pinky keys

 SC0c::SendKey("U+20ac", {}) ; €
+SC0c::SendKey("U+20ac", {}) ; €

 SC0d::SendKey("U+0025", {}) ; %
+SC0d::SendKey("U+0025", {}) ; %

 SC1a::SendKey("U+005b", {}) ; [
+SC1a::SendKey("U+007b", {}) ; {

 SC1b::SendKey("U+005d", {}) ; ]
+SC1b::SendKey("U+007d", {}) ; }

 SC28::SendKey("U+0027", {}) ; '
+SC28::SendKey("U+0022", {}) ; "

 SC29::SendKey("U+003d", {}) ; =
+SC29::SendKey("U+002b", {}) ; +

 SC2b::SendKey("U+005c", {}) ; \
+SC2b::SendKey("U+007c", {}) ; |

 SC56::SendKey("U+00ea", {"**": "U+005e"}) ; ê
+SC56::SendKey("U+00ca", {}) ; Ê

;  Space bar

 SC39::SendKey("U+0020", {"**": "U+00a0", "*¨": "U+0022"}) ;  
+SC39::SendKey("U+002d", {"**": "U+00a0", "*¨": "U+0022"}) ; -


;-------------------------------------------------------------------------------
; AltGr
;-------------------------------------------------------------------------------

;  Digits

 <^>!SC02::SendKey("U+2081", {}) ; ₁
<^>!+SC02::SendKey("U+00b9", {}) ; ¹

 <^>!SC03::SendKey("U+2082", {}) ; ₂
<^>!+SC03::SendKey("U+00b2", {}) ; ²

 <^>!SC04::SendKey("U+2083", {}) ; ₃
<^>!+SC04::SendKey("U+00b3", {}) ; ³

 <^>!SC05::SendKey("U+2084", {}) ; ₄
<^>!+SC05::SendKey("U+2074", {}) ; ⁴

 <^>!SC06::SendKey("U+2085", {}) ; ₅
<^>!+SC06::SendKey("U+2075", {}) ; ⁵

 <^>!SC07::SendKey("U+2086", {}) ; ₆
<^>!+SC07::SendKey("U+2076", {}) ; ⁶

 <^>!SC08::SendKey("U+2087", {}) ; ₇
<^>!+SC08::SendKey("U+2077", {}) ; ⁷

 <^>!SC09::SendKey("U+2088", {}) ; ₈
<^>!+SC09::SendKey("U+2078", {}) ; ⁸

 <^>!SC0a::SendKey("U+2089", {}) ; ₉
<^>!+SC0a::SendKey("U+2079", {}) ; ⁹

 <^>!SC0b::SendKey("U+2080", {}) ; ₀
<^>!+SC0b::SendKey("U+2070", {}) ; ⁰

;  Letters, first row

 <^>!SC10::SendKey("U+0060", {}) ; `
<^>!+SC10::SendKey("U+201e", {}) ; „

 <^>!SC11::SendKey("U+0040", {}) ; @
<^>!+SC11::SendKey("U+201e", {}) ; „

 <^>!SC12::SendKey("U+0025", {}) ; %

 <^>!SC13::SendKey("U+0021", {}) ; !

 <^>!SC14::SendKey("U+00ab", {}) ; «
<^>!+SC14::SendKey("U+201c", {}) ; “

 <^>!SC15::SendKey("U+00bb", {}) ; »
<^>!+SC15::SendKey("U+201d", {}) ; ”

 <^>!SC16::SendKey("U+005e", {}) ; ^
<^>!+SC16::SendKey("U+20ac", {}) ; €

 <^>!SC17::SendKey("U+0023", {}) ; #
<^>!+SC17::SendKey("U+00a3", {}) ; £

 <^>!SC18::SendKey("U+007e", {}) ; ~
<^>!+SC18::SendKey("U+2248", {}) ; ≈

 <^>!SC19::SendKey("U+002a", {}) ; *
<^>!+SC19::SendKey("U+00d7", {}) ; ×

;  Letters, second row

 <^>!SC1e::SendKey("U+003c", {}) ; <
<^>!+SC1e::SendKey("U+2264", {}) ; ≤

 <^>!SC1f::SendKey("U+003e", {}) ; >
<^>!+SC1f::SendKey("U+2265", {}) ; ≥

 <^>!SC20::SendKey("U+007b", {}) ; {

 <^>!SC21::SendKey("U+007d", {}) ; }

 <^>!SC22::SendKey("U+005c", {}) ; \

 <^>!SC23::SendKey("U+007c", {}) ; |
<^>!+SC23::SendKey("U+00a6", {}) ; ¦

 <^>!SC24::SendKey("U+0028", {}) ; (
<^>!+SC24::SendKey("U+2014", {}) ; —

 <^>!SC25::SendKey("U+0029", {}) ; )
<^>!+SC25::SendKey("U+2013", {}) ; –

 <^>!SC26::SendKey("U+005b", {}) ; [

 <^>!SC27::SendKey("U+005d", {}) ; ]

;  Letters, third row

 <^>!SC2c::SendKey("U+003a", {"**": "U+00d9"}) ; :
<^>!+SC2c::SendKey("U+2026", {}) ; …

 <^>!SC2d::SendKey("U+002f", {}) ; /

 <^>!SC2e::SendKey("U+003d", {}) ; =

 <^>!SC2f::SendKey("U+0022", {}) ; "

 <^>!SC30::SendKey("U+003b", {}) ; ;
<^>!+SC30::SendKey("U+00b7", {}) ; ·

 <^>!SC31::SendKey("U+0026", {}) ; &
<^>!+SC31::SendKey("U+2212", {}) ; −

 <^>!SC32::SendKey("U+0024", {}) ; $
<^>!+SC32::SendKey("U+00a7", {}) ; §

 <^>!SC33::SendKey("U+003d", {}) ; =
<^>!+SC33::SendKey("U+2260", {}) ; ≠

 <^>!SC34::SendKey("U+002b", {}) ; +
<^>!+SC34::SendKey("U+00b1", {}) ; ±

 <^>!SC35::SendKey("U+0027", {}) ; '
<^>!+SC35::SendKey("U+00bf", {}) ; ¿

;  Pinky keys

;  Space bar

 <^>!SC39::SendKey("U+005f", {"**": "U+00a0", "*¨": "U+0022"}) ; _
<^>!+SC39::SendKey("U+00a0", {"**": "U+00a0", "*¨": "U+0022"}) ;  

; Special Keys

$<^>!Esc::       Send {SC01}
$<^>!End::       Send {SC4f}
$<^>!Home::      Send {SC47}
$<^>!Delete::    Send {SC53}
$<^>!Backspace:: Send {SC0e}


;-------------------------------------------------------------------------------
; Ctrl
;-------------------------------------------------------------------------------

;  Digits

;  Letters, first row

 ^SC10::Send  ^z
^+SC10::Send ^+Z

 ^SC11::Send  ^y
^+SC11::Send ^+Y

 ^SC12::Send  ^o
^+SC12::Send ^+O

 ^SC13::Send  ^w
^+SC13::Send ^+W

 ^SC14::Send  ^b
^+SC14::Send ^+B

 ^SC15::Send  ^f
^+SC15::Send ^+F

 ^SC16::Send  ^c
^+SC16::Send ^+C

 ^SC17::Send  ^h
^+SC17::Send ^+H

 ^SC18::Send  ^g
^+SC18::Send ^+G

 ^SC19::Send  ^x
^+SC19::Send ^+X

;  Letters, second row

 ^SC1e::Send  ^a
^+SC1e::Send ^+A

 ^SC1f::Send  ^i
^+SC1f::Send ^+I

 ^SC20::Send  ^e
^+SC20::Send ^+E

 ^SC21::Send  ^u
^+SC21::Send ^+U

 ^SC22::Send  ^k
^+SC22::Send ^+K

 ^SC23::Send  ^v
^+SC23::Send ^+V

 ^SC24::Send  ^s
^+SC24::Send ^+S

 ^SC25::Send  ^n
^+SC25::Send ^+N

 ^SC26::Send  ^t
^+SC26::Send ^+T

 ^SC27::Send  ^r
^+SC27::Send ^+R

;  Letters, third row

 ^SC2d::Send  ^j
^+SC2d::Send ^+J

 ^SC31::Send  ^m
^+SC31::Send ^+M

 ^SC32::Send  ^d
^+SC32::Send ^+D

 ^SC33::Send  ^l
^+SC33::Send ^+L

 ^SC34::Send  ^p
^+SC34::Send ^+P

;  Pinky keys

;  Space bar


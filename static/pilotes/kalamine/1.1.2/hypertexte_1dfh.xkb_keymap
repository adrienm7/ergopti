// Generated by kalamine on 2024-11-09
//
// This is a standalone XKB keymap file. To apply this keymap, use:
//   xkbcomp -w9 hypertexte_1dfh.xkb_keymap $DISPLAY
//
// DO NOT COPY THIS INTO xkb/symbols: THIS WOULD MESS UP YOUR XKB CONFIG.
//
// File          : hypertexte_1dfh.xkb_keymap
// Project page  : https://hypertexte.beseven.fr
// Author        : Adrien MOYAUX
// Version       : 1.1.2
// License       : WTFPL - Do What The Fuck You Want Public License
//
// Disposition HyperTexte, pour une saisie plus rapide de texte.
//

xkb_keymap {
  xkb_keycodes      { include "evdev"    };
  xkb_types         { include "complete" };
  xkb_compatibility { include "complete" };

  // Base layer + dead key
  // ┌─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┲━━━━━━━━━━┓
  // │     │     │     │     │     │     │     │     │     │     │     │     │     ┃          ┃
  // │     │     │     │     │     │     │     │     │     │     │     │     │     ┃ ⌫        ┃
  // ┢━━━━━┷━━┱──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┺━━┳━━━━━━━┫
  // ┃        ┃ Z   │ Y   │ O   │ W   │ B   │ F   │ D   │ L   │ P   │ ?   │     │     ┃       ┃
  // ┃ ↹      ┃   á │   í │     │     │     │     │     │   û │   q │ ’   │     │     ┃       ┃
  // ┣━━━━━━━━┻┱────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┺┓  ⏎   ┃
  // ┃         ┃ A   │ I   │ E   │ U   │ K   │ V   │ S   │ N   │ T   │ R   │     │     ┃      ┃
  // ┃ ⇬       ┃   è │   é │   œ │     │     │     │     │   ô │     │     │     │     ┃      ┃
  // ┣━━━━━━┳━━┹──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┲━━┷━━━━━┻━━━━━━┫
  // ┃      ┃     │ :   │ J   │ À   │*¨   │ ;   │ M   │ C   │ H   │ G   │ X   ┃               ┃
  // ┃ ⇧    ┃     │ . ù │   æ │   ê │***¨ │ ,   │   ñ │   ç │   î │     │   â ┃ ⇧             ┃
  // ┣━━━━━━┻┳━━━━┷━━┳━━┷━━━━┱┴─────┴─────┴─────┴─────┴─────┴─┲━━━┷━━━┳━┷━━━━━╋━━━━━━━┳━━━━━━━┫
  // ┃       ┃       ┃       ┃                                ┃       ┃       ┃       ┃       ┃
  // ┃ Ctrl  ┃ super ┃ Alt   ┃ ␣                              ┃ AltGr ┃ super ┃ menu  ┃ Ctrl  ┃
  // ┗━━━━━━━┻━━━━━━━┻━━━━━━━┹────────────────────────────────┺━━━━━━━┻━━━━━━━┻━━━━━━━┻━━━━━━━┛

  // AltGr layer
  // ┌─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┲━━━━━━━━━━┓
  // │     │     │     │     │     │     │     │     │     │     │     │     │     ┃          ┃
  // │     │     │     │     │     │     │     │     │     │     │     │     │     ┃ ⌫        ┃
  // ┢━━━━━┷━━┱──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┺━━┳━━━━━━━┫
  // ┃        ┃   „ │   „ │     │     │   “ │   ” │   § │   ≠ │   ± │     │     │     ┃       ┃
  // ┃ ↹      ┃   ` │   @ │   % │   ! │   « │   » │   $ │   = │   + │   ' │     │     ┃       ┃
  // ┣━━━━━━━━┻┱────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┺┓  ⏎   ┃
  // ┃         ┃   ⩽ │   ⩾ │     │     │     │     │     │     │     │     │     │     ┃      ┃
  // ┃ ⇬       ┃   < │   > │   { │   } │   \ │   | │   ( │   ) │   [ │   ] │     │     ┃      ┃
  // ┣━━━━━━┳━━┹──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┲━━┷━━━━━┻━━━━━━┫
  // ┃      ┃     │   … │     │     │     │   · │     │     │     │     │   × ┃               ┃
  // ┃ ⇧    ┃     │   : │   / │   = │   " │   ; │   & │   ^ │   # │   ~ │   * ┃ ⇧             ┃
  // ┣━━━━━━┻┳━━━━┷━━┳━━┷━━━━┱┴─────┴─────┴─────┴─────┴─────┴─┲━━━┷━━━┳━┷━━━━━╋━━━━━━━┳━━━━━━━┫
  // ┃       ┃       ┃       ┃                                ┃       ┃       ┃       ┃       ┃
  // ┃ Ctrl  ┃ super ┃ Alt   ┃ ␣                              ┃ AltGr ┃ super ┃ menu  ┃ Ctrl  ┃
  // ┗━━━━━━━┻━━━━━━━┻━━━━━━━┹────────────────────────────────┺━━━━━━━┻━━━━━━━┻━━━━━━━┻━━━━━━━┛

  partial alphanumeric_keys modifier_keys
  xkb_symbols "Standard" {
    include "pc"
    include "inet(evdev)"

    // The “OneDeadKey” is an ISO_Level3_Latch, i.e. a “dead AltGr” key.
    // This is the only way to have a multi-purpose dead key with XKB.

    // The real AltGr key should be an ISO_Level5_Switch; however,
    // ISO_Level5_Switch does not work as expected when applying this layout
    // with xkbcomp, so let’s use two groups instead and make the AltGr key a
    // group selector.

    name[group1]= "Disposition HyperTexte, pour une saisie plus rapide de texte.";
    name[group2]= "AltGr";

    key.type[group1] = "FOUR_LEVEL";
    key.type[group2] = "TWO_LEVEL";

    // Digits
    key <AE01> {[ 1               , VoidSymbol      , VoidSymbol      , VoidSymbol      ],[ VoidSymbol      , VoidSymbol      ]}; // 1
    key <AE02> {[ 2               , VoidSymbol      , VoidSymbol      , VoidSymbol      ],[ VoidSymbol      , VoidSymbol      ]}; // 2
    key <AE03> {[ 3               , VoidSymbol      , VoidSymbol      , VoidSymbol      ],[ VoidSymbol      , VoidSymbol      ]}; // 3
    key <AE04> {[ 4               , VoidSymbol      , VoidSymbol      , VoidSymbol      ],[ VoidSymbol      , VoidSymbol      ]}; // 4
    key <AE05> {[ 5               , VoidSymbol      , VoidSymbol      , VoidSymbol      ],[ VoidSymbol      , VoidSymbol      ]}; // 5
    key <AE06> {[ 6               , VoidSymbol      , VoidSymbol      , VoidSymbol      ],[ VoidSymbol      , VoidSymbol      ]}; // 6
    key <AE07> {[ 7               , VoidSymbol      , VoidSymbol      , VoidSymbol      ],[ VoidSymbol      , VoidSymbol      ]}; // 7
    key <AE08> {[ 8               , VoidSymbol      , VoidSymbol      , VoidSymbol      ],[ VoidSymbol      , VoidSymbol      ]}; // 8
    key <AE09> {[ 9               , VoidSymbol      , VoidSymbol      , VoidSymbol      ],[ VoidSymbol      , VoidSymbol      ]}; // 9
    key <AE10> {[ 0               , VoidSymbol      , VoidSymbol      , VoidSymbol      ],[ VoidSymbol      , VoidSymbol      ]}; // 0

    // Letters, first row
    key <AD01> {[ z               , Z               , aacute          , Aacute          ],[ grave           , U201E           ]}; // z Z á Á ` „
    key <AD02> {[ y               , Y               , iacute          , Iacute          ],[ at              , U201E           ]}; // y Y í Í @ „
    key <AD03> {[ o               , O               , VoidSymbol      , VoidSymbol      ],[ percent         , VoidSymbol      ]}; // o O     %
    key <AD04> {[ w               , W               , VoidSymbol      , VoidSymbol      ],[ exclam          , VoidSymbol      ]}; // w W     !
    key <AD05> {[ b               , B               , VoidSymbol      , VoidSymbol      ],[ guillemotleft   , U201C           ]}; // b B     « “
    key <AD06> {[ f               , F               , VoidSymbol      , VoidSymbol      ],[ guillemotright  , U201D           ]}; // f F     » ”
    key <AD07> {[ d               , D               , VoidSymbol      , VoidSymbol      ],[ dollar          , section         ]}; // d D     $ §
    key <AD08> {[ l               , L               , ucircumflex     , Ucircumflex     ],[ equal           , notequal        ]}; // l L û Û = ≠
    key <AD09> {[ p               , P               , q               , Q               ],[ plus            , plusminus       ]}; // p P q Q + ±
    key <AD10> {[ U2019           , question        , VoidSymbol      , VoidSymbol      ],[ apostrophe      , VoidSymbol      ]}; // ’ ?     '

    // Letters, second row
    key <AC01> {[ a               , A               , egrave          , Egrave          ],[ less            , U2A7D           ]}; // a A è È < ⩽
    key <AC02> {[ i               , I               , eacute          , Eacute          ],[ greater         , U2A7E           ]}; // i I é É > ⩾
    key <AC03> {[ e               , E               , oe              , OE              ],[ braceleft       , VoidSymbol      ]}; // e E œ Œ {
    key <AC04> {[ u               , U               , VoidSymbol      , VoidSymbol      ],[ braceright      , VoidSymbol      ]}; // u U     }
    key <AC05> {[ k               , K               , VoidSymbol      , VoidSymbol      ],[ backslash       , VoidSymbol      ]}; // k K     \ 
    key <AC06> {[ v               , V               , VoidSymbol      , VoidSymbol      ],[ bar             , brokenbar       ]}; // v V     | ¦
    key <AC07> {[ s               , S               , VoidSymbol      , VoidSymbol      ],[ parenleft       , VoidSymbol      ]}; // s S     (
    key <AC08> {[ n               , N               , ocircumflex     , Ocircumflex     ],[ parenright      , VoidSymbol      ]}; // n N ô Ô )
    key <AC09> {[ t               , T               , VoidSymbol      , VoidSymbol      ],[ bracketleft     , VoidSymbol      ]}; // t T     [
    key <AC10> {[ r               , R               , VoidSymbol      , VoidSymbol      ],[ bracketright    , VoidSymbol      ]}; // r R     ]

    // Letters, third row
    key <AB01> {[ period          , colon           , ugrave          , Ugrave          ],[ colon           , ellipsis        ]}; // . : ù Ù : …
    key <AB02> {[ j               , J               , ae              , AE              ],[ slash           , VoidSymbol      ]}; // j J æ Æ /
    key <AB03> {[ agrave          , Agrave          , ecircumflex     , Ecircumflex     ],[ equal           , VoidSymbol      ]}; // à À ê Ê =
    key <AB04> {[ ISO_Level3_Latch, dead_diaeresis  , dead_diaeresis  , VoidSymbol      ],[ quotedbl        , VoidSymbol      ]}; // *¨ ¨ ¨   "
    key <AB05> {[ comma           , semicolon       , VoidSymbol      , VoidSymbol      ],[ semicolon       , periodcentered  ]}; // , ;     ; ·
    key <AB06> {[ m               , M               , ntilde          , Ntilde          ],[ ampersand       , VoidSymbol      ]}; // m M ñ Ñ &
    key <AB07> {[ c               , C               , ccedilla        , Ccedilla        ],[ asciicircum     , VoidSymbol      ]}; // c C ç Ç ^
    key <AB08> {[ h               , H               , icircumflex     , Icircumflex     ],[ numbersign      , VoidSymbol      ]}; // h H î Î #
    key <AB09> {[ g               , G               , VoidSymbol      , VoidSymbol      ],[ asciitilde      , VoidSymbol      ]}; // g G     ~
    key <AB10> {[ x               , X               , acircumflex     , Acircumflex     ],[ asterisk        , multiply        ]}; // x X â Â * ×

    // Pinky keys
    key <AE11> {[ EuroSign        , VoidSymbol      , VoidSymbol      , VoidSymbol      ],[ VoidSymbol      , VoidSymbol      ]}; // €
    key <AE12> {[ VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      ],[ VoidSymbol      , VoidSymbol      ]}; //
    key <AE13> {[ VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      ],[ VoidSymbol      , VoidSymbol      ]}; //
    key <AD11> {[ VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      ],[ VoidSymbol      , VoidSymbol      ]}; //
    key <AD12> {[ VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      ],[ VoidSymbol      , VoidSymbol      ]}; //
    key <AC11> {[ VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      ],[ VoidSymbol      , VoidSymbol      ]}; //
    key <AB11> {[ VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      ],[ VoidSymbol      , VoidSymbol      ]}; //
    key <TLDE> {[ VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      ],[ VoidSymbol      , VoidSymbol      ]}; //
    key <BKSL> {[ VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      ],[ VoidSymbol      , VoidSymbol      ]}; //
    key <LSGT> {[ VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      ],[ VoidSymbol      , VoidSymbol      ]}; //

    // Space bar
    key <SPCE> {[ space           , minus           , nobreakspace    , nobreakspace    ],[ underscore      , space           ]}; //   -     _

    // AltGr
    // Note: the `ISO_Level5_Latch` here is meaningless but helps with Chromium.
    key <RALT> {
      type = "TWO_LEVEL",
      symbols = [ ISO_Level5_Latch, ISO_Level5_Latch ],
      actions = [ SetGroup(group=2), SetGroup(group=2) ]
    };
  };
};
// vim: ft=xkb:fdm=indent:ts=2:nowrap
